{"ast":null,"code":"var _jsxFileName = \"/home/rustam/SCK/WebProgramming/React/ecommerce/ecommerce-front/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { Title, SignInContainer, ButtonStyles } from \"./sign-in.styles\";\nimport { auth, signInWithGoogle } from \"../../firebase/firebase.utils\";\n\nconst SignIn = () => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      setCredentials({\n        email: \"\",\n        password: \"\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignInContainer, null, /*#__PURE__*/React.createElement(Title, null, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", null, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    label: \"email\",\n    handleChange: handleChange,\n    required: true\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    label: \"password\",\n    handleChange: handleChange,\n    required: true\n  }), /*#__PURE__*/React.createElement(ButtonStyles, null, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\"\n  }, \"SIGN IN\"), /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: signInWithGoogle,\n    isGoogleSignIn: true\n  }, \"SIGN WITH GOOGLE\"))));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/home/rustam/SCK/WebProgramming/React/ecommerce/ecommerce-front/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","Title","SignInContainer","ButtonStyles","auth","signInWithGoogle","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","signInWithEmailAndPassword","error","console","log","handleChange","name","value","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,KAAT,EAAgBC,eAAhB,EAAiCC,YAAjC,QAAqD,kBAArD;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,+BAAvC;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,eAAD,EAAkBC,cAAlB,IAAoCV,QAAQ,CAAC;AACjDW,IAAAA,KAAK,EAAE,EAD0C;AAEjDC,IAAAA,QAAQ,EAAE;AAFuC,GAAD,CAAlD;AAIA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,eAA5B;;AACA,QAAMI,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI;AACF,YAAMT,IAAI,CAACU,0BAAL,CAAgCL,KAAhC,EAAuCC,QAAvC,CAAN;AACAF,MAAAA,cAAc,CAAC;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAAD,CAAd;AACD,KAHD,CAGE,OAAOK,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GATD;;AAUA,QAAMG,YAAY,GAAIN,KAAD,IAAW;AAC9B,UAAM;AAAEO,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBR,KAAK,CAACS,MAA9B;AACAb,IAAAA,cAAc,CAAC,EAAE,GAAGD,eAAL;AAAsB,OAACY,IAAD,GAAQC;AAA9B,KAAD,CAAd;AACD,GAHD;;AAIA,sBACE,oBAAC,eAAD,qBACE,oBAAC,KAAD,oCADF,eAEE,yEAFF,eAGE;AAAM,IAAA,QAAQ,EAAET;AAAhB,kBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEF,KAHT;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,YAAY,EAAES,YALhB;AAME,IAAA,QAAQ;AANV,IADF,eASE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAER,QAHT;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,YAAY,EAAEQ,YALhB;AAME,IAAA,QAAQ;AANV,IATF,eAiBE,oBAAC,YAAD,qBACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC;AAAnB,eADF,eAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEb,gBAAvB;AAAyC,IAAA,cAAc;AAAvD,wBAFF,CAjBF,CAHF,CADF;AA8BD,CAlDD;;AAoDA,eAAeC,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { Title, SignInContainer, ButtonStyles } from \"./sign-in.styles\";\nimport { auth, signInWithGoogle } from \"../../firebase/firebase.utils\";\n\nconst SignIn = () => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = userCredentials;\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      setCredentials({ email: \"\", password: \"\" });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n  return (\n    <SignInContainer>\n      <Title>I already have an account</Title>\n      <span>Sign in with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          label=\"email\"\n          handleChange={handleChange}\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          label=\"password\"\n          handleChange={handleChange}\n          required\n        />\n        <ButtonStyles>\n          <CustomButton type=\"submit\">SIGN IN</CustomButton>\n          <CustomButton onClick={signInWithGoogle} isGoogleSignIn>\n            SIGN WITH GOOGLE\n          </CustomButton>\n        </ButtonStyles>\n      </form>\n    </SignInContainer>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}